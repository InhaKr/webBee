{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["// 'use strict';\n//все что касается списка желаний\nlet w = '';\nlet count = 0;\nlet countCart = parseInt(localStorage.getItem('countCart')) || 0;\nconst x = document.querySelector('#wishlist-body');\nconsole.log(x);\nconst hurd = document.querySelector('.product-wishlist');\nconsole.log(count);\ndocument.addEventListener('click', addProduct);\nfunction addProduct(e) {\n    console.log('1111');\n    console.log(e.target.dataset.id);\n    if (e.target.classList.contains('product-wishlist') && e.target.getAttribute('stroke') === 'gray') {\n        document.querySelectorAll(`[data-id=\"${e.target.dataset.id}\"]`).forEach(function(element) {\n            element.setAttribute('stroke', element.getAttribute('stroke') === 'gray' ? 'red' : 'gray');\n        });\n        count += 1;\n        console.log(count);\n        document.querySelectorAll('.wishlist-count').forEach(function(el) {\n            el.innerHTML = count;\n        });\n        const tr = document.createElement('tr');\n        tr.setAttribute('data-id', `wishlist-row-${e.target.dataset.id}`);\n        tr.classList.add('body-tr');\n        const tdName = document.createElement('td');\n        tdName.innerHTML = e.target.dataset.name;\n        tr.appendChild(tdName);\n        const tdPrice = document.createElement('td');\n        tdPrice.innerHTML = e.target.dataset.price;\n        tr.appendChild(tdPrice);\n        const action = document.createElement('td');\n        action.innerHTML = 'Delete';\n        action.classList.add('delete');\n        tr.appendChild(action);\n        x.appendChild(tr);\n        return;\n    }\n    const r = e.target.closest('tr');\n    if (e.target.classList.contains('delete')) {\n        count -= 1;\n        console.log(count);\n        document.querySelectorAll('.wishlist-count').forEach(function(elem) {\n            elem.innerHTML = count;\n        });\n        let number = e.target.closest('tr').getAttribute('data-id').replace('wishlist-row-', '');\n        document.querySelectorAll(`[data-id=\"${number}\"]`).forEach(function(el) {\n            el.setAttribute('stroke', el.getAttribute('stroke') === 'gray' ? 'red' : 'gray');\n        });\n        r.remove();\n    }\n    if (e.target.classList.contains('product-wishlist') && e.target.getAttribute('stroke') === 'red') {\n        document.querySelectorAll(`[data-id=\"${e.target.dataset.id}\"]`).forEach(function(el) {\n            el.setAttribute('stroke', el.getAttribute('stroke') === 'gray' ? 'red' : 'gray');\n        });\n        count -= 1;\n        document.querySelectorAll('.wishlist-count').forEach(function(el) {\n            el.innerHTML = count;\n        });\n        let u = document.querySelector(`[data-id=\"wishlist-row-${e.target.dataset.id}\"`);\n        console.log(u);\n        u.remove();\n        return;\n    }\n    w = e.target.getAttribute('stroke');\n}\n//все что касается корзины\n// Массив обьектов для хранения товаров в корзине\nlet cart = JSON.parse(localStorage.getItem('cart')) || [];\n// Функция добавления товара в корзину\nfunction addToCart(id, name, price) {\n    const existingItem = cart.find((item)=>item.id === id);\n    if (existingItem) existingItem.quantity += 1; // Увеличиваем количество, если товар уже есть\n    else cart.push({\n        id: id,\n        name: name,\n        price: parseFloat(price),\n        quantity: 1\n    });\n    countCart += 1; // Увеличиваем общее количество товаров\n    saveCart();\n    renderCart();\n    calcCart(countCart); // Обновляем отображение\n}\n// Функция удаления товара из корзины\nfunction removeFromCart(id) {\n    const item = cart.find((item)=>item.id === id);\n    if (item) {\n        countCart -= item.quantity; // Уменьшаем countCart на количество удаляемого товара\n        cart = cart.filter((item)=>item.id !== id);\n        saveCart();\n        renderCart();\n        calcCart(countCart); // Обновляем отображение\n    }\n}\n// Функция изменения количества\nfunction updateQuantity(id, newQuantity) {\n    if (newQuantity < 1) {\n        removeFromCart(id); // Если количество меньше 1, удаляем товар\n        return;\n    }\n    const item = cart.find((item)=>item.id === id);\n    if (item) {\n        const oldQuantity = item.quantity;\n        item.quantity = newQuantity;\n        countCart += newQuantity - oldQuantity; // Обновляем countCart\n        saveCart();\n        renderCart();\n        calcCart(countCart); // Обновляем отображение\n    }\n}\n// Функция рендера корзины\nfunction renderCart() {\n    const cartItems = document.getElementById('cart-items');\n    const totalPrice = document.getElementById('total-price');\n    if (cart.length === 0) {\n        cartItems.innerHTML = '<p class=\"empty-cart\">\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430 \\u043F\\u0443\\u0441\\u0442\\u0430</p>';\n        document.getElementById('clear-cart').disabled = true;\n        totalPrice.innerHTML = 0;\n        countCart = 0; // Сбрасываем countCart\n        calcCart(countCart);\n        return;\n    }\n    document.getElementById('clear-cart').disabled = false;\n    cartItems.innerHTML = cart.map((item)=>`\n        <div class=\"cart-item\">\n\n            <div class=\"cart-item-details\">\n              <h4>${item.name}</h4>\n            </div>\n              <div class=\"quantity-controls\">\n                  <button class=\"quantity-btn\" onclick=\"updateQuantity('${item.id}', ${item.quantity} - 1)\">-</button>\n                  <span class=\"quantity-buy\">${item.quantity}</span>\n                  <button class=\"quantity-btn\" onclick=\"updateQuantity('${item.id}', ${item.quantity} + 1)\">+</button>\n              </div>\n\n            <span class=\"item-price\">${(item.price * item.quantity).toFixed(0)} &#8372</span>\n            <button class=\"remove-btn\" onclick=\"removeFromCart('${item.id}')\">\\u{425}</button>\n        </div>\n    `).join('');\n    const total = cart.reduce((sum, item)=>sum + item.price * item.quantity, 0);\n    // console.log(total);\n    totalPrice.textContent = `${total.toFixed(0)} UAN`;\n}\n// Функция сохранения в localStorage\nfunction saveCart() {\n    localStorage.setItem('cart', JSON.stringify(cart));\n    localStorage.setItem('countCart', JSON.stringify(countCart));\n}\n// Функция очистки корзины\ndocument.getElementById('clear-cart').addEventListener('click', function() {\n    if (confirm(\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443?\")) {\n        cart = [];\n        countCart = 0;\n        calcCart(countCart);\n        saveCart();\n        renderCart();\n    }\n});\n// добавление к корзине кол-ва товара\nfunction calcCart(x) {\n    const countBasket = document.querySelectorAll('.basket-count');\n    countCart = x;\n    countBasket.forEach((item)=>{\n        item.innerHTML = x;\n    });\n    localStorage.setItem('countCart', JSON.stringify(countCart));\n}\n// Обработчики событий для кнопок \"Добавить в корзину\"\ndocument.querySelectorAll('.add-to-cart1').forEach((button)=>{\n    button.addEventListener('click', function(e) {\n        e.preventDefault(); // Предотвращаем переход по href=\"#buy\"\n        const id = this.dataset.id;\n        const name = this.dataset.name;\n        // console.log(name);\n        const price = this.dataset.price;\n        addToCart(id, name, price);\n        this.textContent = \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043E!\";\n        setTimeout(()=>{\n            this.textContent = 'add to cart';\n        }, 2000);\n    });\n});\n// Инициализация при загрузке страницы\nrenderCart();\ncalcCart(countCart);\n// все что косается формы\ndocument.addEventListener('DOMContentLoaded', function() {\n    const nameInput = document.getElementById('name');\n    const emailInput = document.getElementById('email');\n    const phoneInput = document.getElementById('phone');\n    const submitButton = document.querySelector('.contact-button');\n    const form = document.querySelector('.contact-form');\n    // Проверка наличия всех элементов\n    if (!nameInput || !emailInput || !phoneInput || !submitButton || !form) {\n        console.error(\"\\u041E\\u0434\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u0444\\u043E\\u0440\\u043C\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B \\u0432 DOM\");\n        return;\n    }\n    // Функция для проверки валидности всех полей\n    function checkFormValidity() {\n        const name = nameInput.value.trim();\n        const email = emailInput.value.trim();\n        const phone = phoneInput.value.trim();\n        const isNameValid = /^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]{2,}$/.test(name);\n        const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n        const isPhoneValid = /^\\+\\d{12}$/.test(phone);\n        submitButton.disabled = !(isNameValid && isEmailValid && isPhoneValid);\n    }\n    // Обмеження вводу для імені (тільки літери)\n    nameInput.addEventListener('input', function(e) {\n        const value = e.target.value;\n        e.target.value = value.replace(/[^a-zA-Zа-яА-ЯґҐєЄіІїЇ]/g, '');\n        const nameError = document.getElementById('nameError');\n        if (value && !/^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+$/.test(value)) nameError.style.display = 'block';\n        else nameError.style.display = 'none';\n        checkFormValidity();\n    });\n    // Валідація email у реальному часі\n    emailInput.addEventListener('input', function(e) {\n        const value = e.target.value;\n        const emailError = document.getElementById('emailError');\n        if (value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) emailError.style.display = 'block';\n        else emailError.style.display = 'none';\n        checkFormValidity();\n    });\n    // Обмеження та валідація вводу для телефону\n    phoneInput.addEventListener('input', function(e) {\n        const value = e.target.value;\n        const phoneError = document.getElementById('phoneError');\n        e.target.value = value.replace(/[^0-9+]/g, '');\n        if (value && !/^\\+\\d{0,12}$/.test(value)) phoneError.style.display = 'block';\n        else if (value && !/^\\+\\d{12}$/.test(value)) phoneError.style.display = 'block';\n        else phoneError.style.display = 'none';\n        checkFormValidity();\n    });\n    // Валідація форми при відправці\n    function validateForm(event) {\n        event.preventDefault(); // Предотвращаем перезагрузку страницы\n        // Очистка предыдущих ошибок\n        document.querySelectorAll('.error-message').forEach((error)=>error.style.display = 'none');\n        // Очистка сообщения об успехе\n        const successMessage = document.querySelector('.success-message');\n        if (successMessage) successMessage.style.display = 'none';\n        // Получение значений полей\n        const name = nameInput.value.trim();\n        const phone = phoneInput.value.trim();\n        const email = emailInput.value.trim();\n        let isValid = true;\n        // Валидация имени (только буквы, минимум 2 символа)\n        if (!/^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]{2,}$/.test(name)) {\n            document.getElementById('nameError').style.display = 'block';\n            isValid = false;\n        }\n        // Валидация телефона (+ и 12 цифр)\n        if (!/^\\+\\d{12}$/.test(phone)) {\n            document.getElementById('phoneError').style.display = 'block';\n            isValid = false;\n        }\n        // Валидация email\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            document.getElementById('emailError').style.display = 'block';\n            isValid = false;\n        }\n        // Показ сообщения об успехе\n        if (isValid && successMessage) {\n            successMessage.style.display = 'block';\n            form.reset(); // Сбрасываем форму\n            checkFormValidity(); // Обновляем состояние кнопки\n        }\n        return isValid;\n    }\n    // Привязка функции validateForm к событию отправки формы\n    form.addEventListener('submit', validateForm);\n}); // //lang-switcher\n // // Выбираем все ссылки языков (для маленьких и больших экранов)\n // const langLinks = document.querySelectorAll('.lang__link');\n // const langSwitcher = document.querySelector('.lang-switcher');\n // const currentLangSpan = langSwitcher.querySelector(\n //   '.lang-switcher__current span',\n // );\n // // Объект с переводами для всех языков\n // const translations = {\n //   en: {\n //     title:\n //       'The New Start of <br><span class=\"header__title--color\">VR LOCOMOTION</span>',\n //     description:\n //       'Discover the most comprehensive VR Locomotion system, and unlock infinite motion in any games on any platforms!',\n //     buyButton: 'Buy Now',\n //   },\n //   ru: {\n //     title:\n //       'Новый старт <br><span class=\"header__title--color\">VR-локомоции</span>',\n //     description:\n //       'Откройте самую полную систему VR-локомоции и разблокируйте бесконечное движение в любых играх на любых платформах!',\n //     buyButton: 'Купить сейчас',\n //   },\n //   uk: {\n //     title:\n //       'Новий Початок <br><span class=\"header__title--color\">VR Локомоції</span>',\n //     description:\n //       'Відкрийте найповнішу систему VR локомоції та розблокуйте безмежний рух у будь-яких іграх на будь-яких платформах!',\n //     buyButton: 'Купити Зараз',\n //   },\n // };\n\n//# sourceMappingURL=webBee.0310bdf1.js.map\n","// 'use strict';\n\n//все что касается списка желаний\nlet w = '';\nlet count = 0;\nlet countCart = parseInt(localStorage.getItem('countCart')) || 0;\n\nconst x = document.querySelector('#wishlist-body');\nconsole.log(x);\n\nconst hurd = document.querySelector('.product-wishlist');\nconsole.log(count);\n\ndocument.addEventListener('click', addProduct);\n\nfunction addProduct(e) {\n  console.log('1111')\n  console.log(e.target.dataset.id);\n  if (\n    e.target.classList.contains('product-wishlist') &&\n    e.target.getAttribute('stroke') === 'gray'\n  ) {\n    document\n      .querySelectorAll(`[data-id=\"${e.target.dataset.id}\"]`)\n      .forEach(function (element) {\n        element.setAttribute(\n          'stroke',\n          element.getAttribute('stroke') === 'gray' ? 'red' : 'gray',\n        );\n      });\n\n    count += 1;\n    console.log(count);\n    document.querySelectorAll('.wishlist-count').forEach(function (el) {\n      el.innerHTML = count;\n    });\n\n    const tr = document.createElement('tr');\n    tr.setAttribute('data-id', `wishlist-row-${e.target.dataset.id}`);\n    tr.classList.add('body-tr');\n\n    const tdName = document.createElement('td');\n    tdName.innerHTML = e.target.dataset.name;\n    tr.appendChild(tdName);\n\n    const tdPrice = document.createElement('td');\n    tdPrice.innerHTML = e.target.dataset.price;\n    tr.appendChild(tdPrice);\n\n    const action = document.createElement('td');\n    action.innerHTML = 'Delete';\n    action.classList.add('delete');\n\n    tr.appendChild(action);\n    x.appendChild(tr);\n\n    return;\n  }\n\n  const r = e.target.closest('tr');\n  if (e.target.classList.contains('delete')) {\n    count -= 1;\n    console.log(count);\n    document.querySelectorAll('.wishlist-count').forEach(function (elem) {\n      elem.innerHTML = count;\n    });\n\n    let number = e.target\n      .closest('tr')\n      .getAttribute('data-id')\n      .replace('wishlist-row-', '');\n    document.querySelectorAll(`[data-id=\"${number}\"]`).forEach(function (el) {\n      el.setAttribute(\n        'stroke',\n        el.getAttribute('stroke') === 'gray' ? 'red' : 'gray',\n      );\n    });\n\n    r.remove();\n  }\n\n  if (\n    e.target.classList.contains('product-wishlist') &&\n    e.target.getAttribute('stroke') === 'red'\n  ) {\n    document\n      .querySelectorAll(`[data-id=\"${e.target.dataset.id}\"]`)\n      .forEach(function (el) {\n        el.setAttribute(\n          'stroke',\n          el.getAttribute('stroke') === 'gray' ? 'red' : 'gray',\n        );\n      });\n\n    count -= 1;\n    document.querySelectorAll('.wishlist-count').forEach(function (el) {\n      el.innerHTML = count;\n    });\n\n    let u = document.querySelector(\n      `[data-id=\"wishlist-row-${e.target.dataset.id}\"`,\n    );\n    console.log(u);\n    u.remove();\n\n    return;\n  }\n\n  w = e.target.getAttribute('stroke');\n}\n\n//все что касается корзины\n\n// Массив обьектов для хранения товаров в корзине\nlet cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n// Функция добавления товара в корзину\nfunction addToCart(id, name, price) {\n  const existingItem = cart.find((item) => item.id === id);\n  if (existingItem) {\n    existingItem.quantity += 1; // Увеличиваем количество, если товар уже есть\n  } else {\n    cart.push({\n      id: id,\n      name: name,\n      price: parseFloat(price),\n      quantity: 1,\n    });\n  }\n  countCart += 1; // Увеличиваем общее количество товаров\n  saveCart();\n  renderCart();\n  calcCart(countCart); // Обновляем отображение\n}\n\n// Функция удаления товара из корзины\nfunction removeFromCart(id) {\n  const item = cart.find((item) => item.id === id);\n  if (item) {\n    countCart -= item.quantity; // Уменьшаем countCart на количество удаляемого товара\n    cart = cart.filter((item) => item.id !== id);\n    saveCart();\n    renderCart();\n    calcCart(countCart); // Обновляем отображение\n  }\n}\n// Функция изменения количества\nfunction updateQuantity(id, newQuantity) {\n  if (newQuantity < 1) {\n    removeFromCart(id); // Если количество меньше 1, удаляем товар\n    return;\n  }\n\n  const item = cart.find((item) => item.id === id);\n  if (item) {\n    const oldQuantity = item.quantity;\n    item.quantity = newQuantity;\n    countCart += newQuantity - oldQuantity; // Обновляем countCart\n\n    saveCart();\n    renderCart();\n    calcCart(countCart); // Обновляем отображение\n  }\n}\n\n// Функция рендера корзины\nfunction renderCart() {\n  const cartItems = document.getElementById('cart-items');\n  const totalPrice = document.getElementById('total-price');\n\n  if (cart.length === 0) {\n    cartItems.innerHTML = '<p class=\"empty-cart\">Корзина пуста</p>';\n    document.getElementById('clear-cart').disabled = true;\n    totalPrice.innerHTML = 0;\n    countCart = 0; // Сбрасываем countCart\n    calcCart(countCart);\n    return;\n  }\n\n  document.getElementById('clear-cart').disabled = false;\n\n  cartItems.innerHTML = cart\n    .map(\n      (item) => `\n        <div class=\"cart-item\">\n\n            <div class=\"cart-item-details\">\n              <h4>${item.name}</h4>\n            </div>\n              <div class=\"quantity-controls\">\n                  <button class=\"quantity-btn\" onclick=\"updateQuantity('${item.id}', ${item.quantity} - 1)\">-</button>\n                  <span class=\"quantity-buy\">${item.quantity}</span>\n                  <button class=\"quantity-btn\" onclick=\"updateQuantity('${item.id}', ${item.quantity} + 1)\">+</button>\n              </div>\n\n            <span class=\"item-price\">${(item.price * item.quantity).toFixed(0)} &#8372</span>\n            <button class=\"remove-btn\" onclick=\"removeFromCart('${item.id}')\">Х</button>\n        </div>\n    `,\n    )\n    .join('');\n\n  const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  // console.log(total);\n  totalPrice.textContent = `${total.toFixed(0)} UAN`;\n}\n\n// Функция сохранения в localStorage\nfunction saveCart() {\n  localStorage.setItem('cart', JSON.stringify(cart));\n  localStorage.setItem('countCart', JSON.stringify(countCart));\n}\n\n// Функция очистки корзины\ndocument.getElementById('clear-cart').addEventListener('click', function () {\n  if (confirm('Вы уверены, что хотите очистить корзину?')) {\n    cart = [];\n    countCart = 0;\n\n    calcCart(countCart);\n    saveCart();\n    renderCart();\n  }\n});\n\n// добавление к корзине кол-ва товара\nfunction calcCart(x) {\n  const countBasket = document.querySelectorAll('.basket-count');\n  countCart = x;\n  countBasket.forEach((item) => {\n    item.innerHTML = x;\n  });\n  localStorage.setItem('countCart', JSON.stringify(countCart));\n}\n\n// Обработчики событий для кнопок \"Добавить в корзину\"\ndocument.querySelectorAll('.add-to-cart1').forEach((button) => {\n  button.addEventListener('click', function (e) {\n    e.preventDefault(); // Предотвращаем переход по href=\"#buy\"\n\n    const id = this.dataset.id;\n    const name = this.dataset.name;\n    // console.log(name);\n    const price = this.dataset.price;\n    addToCart(id, name, price);\n    this.textContent = 'Добавлено!';\n    setTimeout(() => {\n      this.textContent = 'add to cart';\n    }, 2000);\n  });\n});\n\n// Инициализация при загрузке страницы\nrenderCart();\ncalcCart(countCart);\n\n// все что косается формы\ndocument.addEventListener('DOMContentLoaded', function () {\n  const nameInput = document.getElementById('name');\n  const emailInput = document.getElementById('email');\n  const phoneInput = document.getElementById('phone');\n  const submitButton = document.querySelector('.contact-button');\n  const form = document.querySelector('.contact-form');\n\n  // Проверка наличия всех элементов\n  if (!nameInput || !emailInput || !phoneInput || !submitButton || !form) {\n    console.error('Один или несколько элементов формы не найдены в DOM');\n    return;\n  }\n\n\n\n  // Функция для проверки валидности всех полей\n  function checkFormValidity() {\n    const name = nameInput.value.trim();\n    const email = emailInput.value.trim();\n    const phone = phoneInput.value.trim();\n\n    const isNameValid = /^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]{2,}$/.test(name);\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    const isPhoneValid = /^\\+\\d{12}$/.test(phone);\n\n    submitButton.disabled = !(isNameValid && isEmailValid && isPhoneValid);\n  }\n\n  // Обмеження вводу для імені (тільки літери)\n  nameInput.addEventListener('input', function (e) {\n    const value = e.target.value;\n    e.target.value = value.replace(/[^a-zA-Zа-яА-ЯґҐєЄіІїЇ]/g, '');\n    const nameError = document.getElementById('nameError');\n    if (value && !/^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+$/.test(value)) {\n      nameError.style.display = 'block';\n    } else {\n      nameError.style.display = 'none';\n    }\n    checkFormValidity();\n  });\n\n  // Валідація email у реальному часі\n  emailInput.addEventListener('input', function (e) {\n    const value = e.target.value;\n    const emailError = document.getElementById('emailError');\n    if (value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      emailError.style.display = 'block';\n    } else {\n      emailError.style.display = 'none';\n    }\n    checkFormValidity();\n  });\n\n  // Обмеження та валідація вводу для телефону\n  phoneInput.addEventListener('input', function (e) {\n    const value = e.target.value;\n    const phoneError = document.getElementById('phoneError');\n    e.target.value = value.replace(/[^0-9+]/g, '');\n    if (value && !/^\\+\\d{0,12}$/.test(value)) {\n      phoneError.style.display = 'block';\n    } else if (value && !/^\\+\\d{12}$/.test(value)) {\n      phoneError.style.display = 'block';\n    } else {\n      phoneError.style.display = 'none';\n    }\n    checkFormValidity();\n  });\n\n  // Валідація форми при відправці\n  function validateForm(event) {\n    event.preventDefault(); // Предотвращаем перезагрузку страницы\n\n    // Очистка предыдущих ошибок\n    document\n      .querySelectorAll('.error-message')\n      .forEach((error) => (error.style.display = 'none'));\n\n    // Очистка сообщения об успехе\n    const successMessage = document.querySelector('.success-message');\n    if (successMessage) {\n      successMessage.style.display = 'none';\n    }\n\n    // Получение значений полей\n    const name = nameInput.value.trim();\n    const phone = phoneInput.value.trim();\n    const email = emailInput.value.trim();\n\n    let isValid = true;\n\n    // Валидация имени (только буквы, минимум 2 символа)\n    if (!/^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]{2,}$/.test(name)) {\n      document.getElementById('nameError').style.display = 'block';\n      isValid = false;\n    }\n\n    // Валидация телефона (+ и 12 цифр)\n    if (!/^\\+\\d{12}$/.test(phone)) {\n      document.getElementById('phoneError').style.display = 'block';\n      isValid = false;\n    }\n\n    // Валидация email\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      document.getElementById('emailError').style.display = 'block';\n      isValid = false;\n    }\n\n    // Показ сообщения об успехе\n    if (isValid && successMessage) {\n      successMessage.style.display = 'block';\n      form.reset(); // Сбрасываем форму\n      checkFormValidity(); // Обновляем состояние кнопки\n    }\n\n    return isValid;\n  }\n\n  // Привязка функции validateForm к событию отправки формы\n  form.addEventListener('submit', validateForm);\n});\n\n// //lang-switcher\n// // Выбираем все ссылки языков (для маленьких и больших экранов)\n// const langLinks = document.querySelectorAll('.lang__link');\n// const langSwitcher = document.querySelector('.lang-switcher');\n// const currentLangSpan = langSwitcher.querySelector(\n//   '.lang-switcher__current span',\n// );\n\n// // Объект с переводами для всех языков\n// const translations = {\n//   en: {\n//     title:\n//       'The New Start of <br><span class=\"header__title--color\">VR LOCOMOTION</span>',\n//     description:\n//       'Discover the most comprehensive VR Locomotion system, and unlock infinite motion in any games on any platforms!',\n//     buyButton: 'Buy Now',\n//   },\n//   ru: {\n//     title:\n//       'Новый старт <br><span class=\"header__title--color\">VR-локомоции</span>',\n//     description:\n//       'Откройте самую полную систему VR-локомоции и разблокируйте бесконечное движение в любых играх на любых платформах!',\n//     buyButton: 'Купить сейчас',\n//   },\n//   uk: {\n//     title:\n//       'Новий Початок <br><span class=\"header__title--color\">VR Локомоції</span>',\n//     description:\n//       'Відкрийте найповнішу систему VR локомоції та розблокуйте безмежний рух у будь-яких іграх на будь-яких платформах!',\n//     buyButton: 'Купити Зараз',\n//   },\n// };\n"],"names":["w","count","countCart","parseInt","localStorage","getItem","x","document","querySelector","console","log","hurd","addProduct","e","target","dataset","id","classList","contains","getAttribute","querySelectorAll","forEach","element","setAttribute","el","innerHTML","tr","createElement","add","tdName","name","appendChild","tdPrice","price","action","r","closest","elem","number","replace","remove","u","addEventListener","cart","JSON","parse","addToCart","existingItem","find","item","quantity","push","parseFloat","saveCart","renderCart","calcCart","removeFromCart","filter","updateQuantity","newQuantity","oldQuantity","cartItems","getElementById","totalPrice","length","disabled","map","toFixed","join","total","reduce","sum","textContent","setItem","stringify","countBasket","confirm","button","preventDefault","setTimeout","nameInput","emailInput","phoneInput","submitButton","form","error","checkFormValidity","value","trim","email","phone","isNameValid","test","isEmailValid","isPhoneValid","nameError","style","display","emailError","phoneError","event","successMessage","isValid","reset"],"version":3,"file":"webBee.0310bdf1.js.map"}